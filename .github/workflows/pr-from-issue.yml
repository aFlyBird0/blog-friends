name: Update Friends From Issue
on:
  issues:
    types: ["opened", "reopened"]

env:
  FRIEND_TOOL_REPO: aFlyBird0/blog-friends # 执行 actions 时拉取 Go 代码的仓库，格式 username/repo，建议用 GitHub 的 Template 功能创建一个属于自己的仓库，防止我这个仓库更新代码后影响到你的仓库
  BLOG_REPO: ${{ secrets.BLOG_REPO }} # 博客仓库的地址，格式 username/repo
  BLOG_LOCAL_PATH: blog # 不用改
  BLOG_FRIENDS_PATH: content/friends/index.md # 博客仓库中存放友链的相对文件路径（不要以/开头）
  # 下面两个token选一个
  # ① 如果友链申请仓库和博客仓库不是同一个
  # 需要GitHub设置中申请一个token，全选"repo"权限
  #（https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token）
  # 然后把 token 添加到仓库的 Settings->Secrets and variables->Actions 中，名字为 GH_PAT
  TOKEN: ${{ secrets.GH_PAT }}
  # ② 如果友链申请仓库和博客仓库是同一个
  # 只需要把下面这行取消注释，把上面的注释掉就行，不用额外设置token
  # TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  update-friends:
    # 用于同一仓库下时，配置默认的 GITHUB_TOKEN 的权限，以能够 push 和 pull request
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Friends Tool Repo
        uses: actions/checkout@v3
        with:
          # 把 go 代码下载到本地，并且不新建目录
          repository: ${{ env.FRIEND_TOOL_REPO }}
      - name: set up go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Generate Friends Markdown
        run: |
          line=$(cat ${GITHUB_EVENT_PATH} | jq -r '.issue.body' | head -n 1)
          if [ "$line" != "### 站点名字" ] ; then
            exit 0
          fi
          #!/bin/bash

          file_content=$(cat ${GITHUB_EVENT_PATH} | jq -r '.issue.body')
          echo $file_content > input.md

      - name: Checkout Blog Repo
        uses: actions/checkout@v2
        with:
          repository: ${{ env.BLOG_REPO }}
          path: ${{ env.BLOG_LOCAL_PATH }}
          token: ${{ env.TOKEN }}
      - name: Combine Friends Markdown
        run: |
          pwd
          blogFriendFile=${{ env.BLOG_LOCAL_PATH }}/${{ env.BLOG_FRIENDS_PATH }}
          echo '原始friend文件内容'
          cat $blogFriendFile
          go mod tidy
          go run . -in input.md -friend $blogFriendFile
          echo '合并后friend文件内容'
          cat $blogFriendFile
      - name: Create Pull Request
        # reference: https://github.com/peter-evans/create-pull-request
        uses: peter-evans/create-pull-request@v4
        with:
          # this GitHub Personal Access Token should have 'repo' scope to the forked repo
          # or any other way in this link:
          # https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#workarounds-to-trigger-further-workflow-runs
          token: ${{ env.TOKEN }}
          path: ${{ env.BLOG_LOCAL_PATH }}
          branch: update-friend-links-from-issue
          branch-suffix: timestamp
          title: "feat: update friend links from issue(auto by bot)"
          commit-message: "feat: update friend links from issue(auto by bot)"
          #          body: "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action"
          delete-branch: true
          #          push-to-fork: ${{ env.FORK_REPO }}
          # if you want to active the configuration below,
          # you should use token with admin rights to devlake helm chart repo
          #          reviewers: user1,user2
          #          team-reviewers:
          #          assignees:
          #          labels: bot

          
